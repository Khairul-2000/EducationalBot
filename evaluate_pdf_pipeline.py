from difflib import SequenceMatcher
from Rag_pipeline_for_pdf import qa_chain_new



test_set = [
    # Basic Questions (Bengali)
    {
        "query": "ржжрзАржкрзБрж░ ржЪрж╛ржЪрж╛рж░ рж╕ржЩрзНржЧрзЗ ржЕржкрж░рж┐ржЪрж┐рждрж╛' ржЧрж▓рзНржкрзЗрж░ ржХрзЛржи ржЪрж░рж┐рждрзНрж░рзЗрж░ ржорж┐рж▓ ржЖржЫрзЗ ?",
        "expected": "ржорж╛ржорж╛рж░"
    },
    {
        "query": "'ржЕржкрж░рж┐ржЪрж┐рждрж╛' ржЧрж▓рзНржкрзЗ 'ржХрж▓рзНржпрж╛ржгрзА' ржмрж┐ржпрж╝рзЗрждрзЗ ржХрзЛржи рж░ржЩрзЗрж░ рж╢рж╛ржбрж╝рж┐ ржкрж░рзЗржЫрзЗ ржмрж▓рзЗ ржЕржирзБржкржо ржХрж▓рзНржкржирж╛ ржХрж░рзЗ ?",
        "expected": "рж▓рж╛рж▓"
    },
    {
        "query":"'ржЕржкрж░рж┐ржЪрж┐рждрж╛' ржЧрж▓рзНржкрзЗ ржХрж▓рзНржпрж╛ржгрзАрж░ ржмрж┐ржпрж╝рзЗ ржирж╛ ржХрж░рж╛рж░ рж╕рж┐ржжрзНржзрж╛ржирзНрждрзЗрж░ ржХрж╛рж░ржг ржХрзА ржЫрж┐рж▓ ?",
        "expected": "ржЖрждрзНржоржорж░рзНржзрж╛ржжрж╛"
    },
    {
        "query": "рж╢рзНржмрж╢рзБрж░рзЗрж░ рж╕рж╛ржоржирзЗ ржЕржирзБржкржорзЗрж░ ржорж╛ржерж╛ рж╣рзЗржЯ ржХрж░рзЗ рж░рж╛ржЦрж╛рж░ ржХрж╛рж░ржг ржХрзА ?",
        "expected": "ржорж╛ржорж╛рж░ ржЧрж╣ржирж╛ ржкрж░рзАржХрзНрж╖рж╛рж░ ржХрж╛рж░ржгрзЗ"
    },
   
]


def similarity(a, b):
    return SequenceMatcher(None, a.strip().lower(), b.strip().lower()).ratio()

def evaluate_rag_system(test_set, qa_chain):
    results = []
    for item in test_set:
        query = item["query"]
        expected = item["expected"]

        response = qa_chain_new({"query": query})
        answer = response["result"]
        context = " ".join([doc.page_content for doc in response["source_documents"]])

        grounded = expected in context
        sim_score = round(similarity(expected, answer), 2)

        results.append({
            "Query": query,
            "Expected": expected,
            "Generated": answer,
            "Grounded": "тЬЕ" if grounded else "тЭМ",
            "Similarity": sim_score,
            "Context": context
        })
    
    return results


results = evaluate_rag_system(test_set, qa_chain_new)

with open("evaluation_results.txt", "w", encoding="utf-8") as file:
    for r in results:
        file.write("\n==========================\n")
        file.write(f"тЭУ ржкрзНрж░рж╢рзНржи: {r['Query']}\n")
        file.write(f"ЁЯОп ржкрзНрж░рждрзНржпрж╛рж╢рж┐ржд: {r['Expected']}\n")
        file.write(f"ЁЯза ржЙрждрзНрждрж░: {r['Generated']}\n")
        file.write(f"ЁЯУЪ Grounded: {r['Grounded']}\n")
        file.write(f"ЁЯУП Similarity: {r['Similarity']}\n")
